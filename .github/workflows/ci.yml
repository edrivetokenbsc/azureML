name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.11]

    steps:
    # 1. Kiểm tra mã nguồn
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Thiết lập Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3. Cache pip
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/app/requirements.txt', '**/test/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    # 4. Cài đặt dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install -r test/requirements.txt
        pip install pytest pytest-cov flake8 pylint bandit

    # 5. Chạy Flake8 (Linting)
    - name: Lint with Flake8
      run: |
        flake8 app
        flake8 test
      continue-on-error: true # Không dừng pipeline nếu flake8 phát hiện lỗi nhỏ

    # 6. Phân tích bảo mật với Bandit
    - name: Static Analysis with Bandit
      run: |
        bandit -r app/scripts
      continue-on-error: true # Không dừng pipeline nếu phát hiện lỗi bảo mật nhẹ

    # 7. Chạy Unit Test và Coverage
    - name: Run Unit Tests with Coverage
      run: |
        pytest --cov=app/scripts --cov-report=xml --cov-report=term

    # 8. Tải lên Coverage Report
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
